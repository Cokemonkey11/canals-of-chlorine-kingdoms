package ChooseHero

import ClosureForGroups
import HashMap
import ItemIds

import Teams
import WhenClose
import WhenRevivable


public constant player_heroes = new HashMap<player, unit>()


init
    forUnitsOfPlayer(players[PLAYER_NEUTRAL_PASSIVE]) (unit u) ->
        if u.isType(UNIT_TYPE_HERO)
            u
            ..whenCloseStatic() (close, source) ->
                let where = forceWest.containsPlayer(close.getOwner()) ? players[0].getStartLocation() : players[1].getStartLocation()
                close.setPos(where)
                close.getOwner().panCameraToTimed(where, 0.)
                let hero = ReplaceUnitBJ(close, source.getTypeId(), bj_UNIT_STATE_METHOD_DEFAULTS)
                ..onRevivable() which ->
                    which.revive(where, true)
                    which.getOwner().panCameraToTimed(where, 0.)

                player_heroes.put(hero.getOwner(), hero)

                hero.addItemById(ItemIds.circletofNobility)
